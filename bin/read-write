#!/usr/bin/env julia

# works in that command:
# echo "[\"~#'\",\"~zNaN\"][\"~#'\",\"~zNaN\"]"  && echo "[\"~#'\",\"~zNaN\"] [\"~#'\",\"~zNaN\"]" | bin/read-write && echo
# returns ["~#'","~zNaN"]["~#'","~zNaN"]

include("../src/Transit.jl")
import Transit

debug = false
#debug = true

if debug
    log_f = open("/tmp/log.txt", "w")
end

function log_msg(msg)
    if debug
        println(log_f, string(msg))
        flush(log_f)
    end
end

verbose = false

if length(ARGS) <= 0
    verbose = false
elseif ARGS[1] == "json"
    verbose = false
elseif ARGS[1] == "json-verbose"
    verbose = true
else
    throw(Error("Bad paramter: %(ARGV[1])"))
end
  
while !eof(STDIN)
  log_msg("reading")
  json_data = JSON.parse(STDIN)

  log_msg(json_data)

  d = Transit.Decoder() 
  data = Transit.decode(d, json_data)
  log_msg("Julia value: $data")

  json = Transit.to_transit(data, verbose)
  log_msg("Transit: $json")
  log_msg(json)
  log_msg("\n")

  write(STDOUT, json)
  flush(STDOUT)
  log_msg("written")
end
log_msg("done")
